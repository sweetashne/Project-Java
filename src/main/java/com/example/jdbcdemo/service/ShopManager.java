package com.example.jdbcdemo.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.example.jdbcdemo.domain.Food;
import com.example.jdbcdemo.domain.Pet;
import com.example.jdbcdemo.domain.Shop;

public class ShopManager {

	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableShop = "CREATE TABLE Shop(id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, Name varchar(20),Type varchar(20),Price integer)";

	private PreparedStatement addShopStmt;
	private PreparedStatement deleteAllShopsStmt;
	private PreparedStatement getAllShopsStmt;
	private PreparedStatement updateShopStmt;
	private PreparedStatement getPetsStmt;
	private PreparedStatement deletePetStmt;
	private Statement statement;

	public ShopManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Shop".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableShop);

			addShopStmt = connection
					.prepareStatement("INSERT INTO Shop (Name, Type, Price) VALUES (?, ?, ?)");
			deleteAllShopsStmt = connection
					.prepareStatement("DELETE FROM Shop");
			getAllShopsStmt = connection
					.prepareStatement("SELECT id, Name, Type, Price FROM Shop");
			updateShopStmt = connection
					.prepareStatement("UPDATE Shop set Name=?, Type=?, Price=? WHERE id=?");
			getPetsStmt = connection
					.prepareStatement("select shop.id,shop.name,shop.type,shop.price,pet.pname from shop left join pet on pet.type=shop.type ");
			deletePetStmt = connection
					.prepareStatement("");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	Connection getConnection() {
		return connection;
	}

	void clearShops() {
		try {
			deleteAllShopsStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addShop(Shop Shop) {
		int count = 0;
		try {
			addShopStmt.setString(1, Shop.getName());
			addShopStmt.setString(2, Shop.getType());
			addShopStmt.setInt(3, Shop.getPrice());
			count = addShopStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	public int updateShop(Shop Shop,long id){
		int c = 0;
		try {
			updateShopStmt.setString(1, Shop.getName());
			updateShopStmt.setString(2, Shop.getType());
			updateShopStmt.setInt(3, Shop.getPrice());
			updateShopStmt.setLong(4, id);

			c = updateShopStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return c;
	}

	public List<Shop> getPets() {
	
		List<Shop> Shops = new ArrayList<Shop>();

		try {
			ResultSet rs = getPetsStmt.executeQuery();

			while (rs.next()) {
				Pet pe = new Pet();
				Shop p = new Shop();
				p.setId(rs.getInt("id"));
				p.setName(rs.getString("Name"));
				p.setType(rs.getString("Type"));
				p.setPrice(rs.getInt("Price"));
				p.setPets(rs.getString("Pname"));
				Shops.add(p);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return Shops;
	}
	
	
	public List<Shop> getAllShops() {
		List<Shop> Shops = new ArrayList<Shop>();

		try {
			ResultSet rs = getAllShopsStmt.executeQuery();

			while (rs.next()) {
				Shop p = new Shop();
				p.setId(rs.getInt("id"));
				p.setName(rs.getString("Name"));
				p.setType(rs.getString("Type"));
				p.setPrice(rs.getInt("Price"));
				Shops.add(p);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return Shops;
	}

}
