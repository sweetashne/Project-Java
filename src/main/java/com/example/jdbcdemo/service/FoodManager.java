package com.example.jdbcdemo.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.example.jdbcdemo.domain.Food;

public class FoodManager {
	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableFood = "CREATE TABLE Food(id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, Fname varchar(20), Type varchar(20))";

	private PreparedStatement addFoodStmt;
	private PreparedStatement deleteAllFoodsStmt;
	private PreparedStatement getAllFoodsStmt;
	private PreparedStatement updateFoodStmt;
	private Statement statement;

	public FoodManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Food".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableFood);

			addFoodStmt = connection
					.prepareStatement("INSERT INTO Food (Fname, Type) VALUES (?, ?)");
			deleteAllFoodsStmt = connection
					.prepareStatement("DELETE FROM Food");
			getAllFoodsStmt = connection
					.prepareStatement("SELECT id, Fname, Type FROM Food");
			updateFoodStmt = connection
					.prepareStatement("UPDATE Food set Fname=?, Type=? WHERE id=?");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	Connection getConnection() {
		return connection;
	}

	void clearFoods() {
		try {
			deleteAllFoodsStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addFood(Food Food) {
		int count = 0;
		try {
			addFoodStmt.setString(1, Food.getFname());
			addFoodStmt.setString(2, Food.getType());

			count = addFoodStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}

	public int updateFood(Food Food,long id){
		int c = 0;
		try {
			updateFoodStmt.setString(1, Food.getFname());
			updateFoodStmt.setString(2, Food.getType());
			updateFoodStmt.setLong(3, id);

			c = updateFoodStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return c;
	}
	
	public List<Food> getAllFoods() {
		List<Food> Foods = new ArrayList<Food>();

		try {
			ResultSet rs = getAllFoodsStmt.executeQuery();

			while (rs.next()) {
				Food p = new Food();
				p.setId(rs.getInt("id"));
				p.setFname(rs.getString("Fname"));
				p.setType(rs.getString("Type"));
				Foods.add(p);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return Foods;
	}
}
